# Makefile.in generated by automake 1.11.1 from Makefile.am.
# dezhoukv/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# http://svn.sogou-inc.com/svn/arch/public/MakefileDemo
#

# collect built files into one place
# You should add the follwing lines into your 'common.mk'
#
#   collectlib_DIR=$(top_builddir)/_lib
#   collectbin_DIR=$(top_builddir)/_bin
#   collectinclude_DIR=$(top_builddir)/_include
#   include $(top_srcdir)/collect.mk




pkgdatadir = $(datadir)/Dezhoukv
pkgincludedir = $(includedir)/Dezhoukv
pkglibdir = $(libdir)/Dezhoukv
pkglibexecdir = $(libexecdir)/Dezhoukv
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/collect.mk $(top_srcdir)/common-rules.mk \
	$(top_srcdir)/common.mk
bin_PROGRAMS = dezhoukv$(EXEEXT)
TESTS = dezhoukvtest$(EXEEXT) dezhoukvtest2$(EXEEXT)
XFAIL_TESTS = dezhoukvtest2$(EXEEXT)
noinst_PROGRAMS = dezhoukvtest$(EXEEXT) dezhoukvtest2$(EXEEXT)
subdir = dezhoukv
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config-dummy.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libdezhoukv3_a_AR = $(AR) $(ARFLAGS)
libdezhoukv3_a_LIBADD =
am_libdezhoukv3_a_OBJECTS = dezhoukv3.$(OBJEXT)
libdezhoukv3_a_OBJECTS = $(am_libdezhoukv3_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libbloomfilter_la_LIBADD =
am_libbloomfilter_la_OBJECTS =
libbloomfilter_la_OBJECTS = $(am_libbloomfilter_la_OBJECTS)
libbloomfilter_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libbloomfilter_la_LDFLAGS) $(LDFLAGS) -o $@
libdezhoukv2_la_LIBADD =
am_libdezhoukv2_la_OBJECTS = dezhoukv2.lo
libdezhoukv2_la_OBJECTS = $(am_libdezhoukv2_la_OBJECTS)
libdezhoukv2_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libdezhoukv2_la_LDFLAGS) $(LDFLAGS) -o $@
libhyperloglog_la_LIBADD =
am_libhyperloglog_la_OBJECTS =
libhyperloglog_la_OBJECTS = $(am_libhyperloglog_la_OBJECTS)
libhyperloglog_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libhyperloglog_la_LDFLAGS) $(LDFLAGS) -o $@
libmaglev_la_LIBADD =
am_libmaglev_la_OBJECTS = csiphash.lo Lanton.lo
libmaglev_la_OBJECTS = $(am_libmaglev_la_OBJECTS)
libmaglev_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libmaglev_la_LDFLAGS) $(LDFLAGS) -o $@
libmurmurhash3_la_LIBADD =
am_libmurmurhash3_la_OBJECTS = MurmurHash3.lo
libmurmurhash3_la_OBJECTS = $(am_libmurmurhash3_la_OBJECTS)
libmurmurhash3_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libmurmurhash3_la_LDFLAGS) $(LDFLAGS) -o $@
libredisio_la_LIBADD =
am_libredisio_la_OBJECTS = redis_client.lo
libredisio_la_OBJECTS = $(am_libredisio_la_OBJECTS)
libredisio_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libredisio_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_dezhoukv_OBJECTS = dezhoukv-dezhoukv.$(OBJEXT) \
	dezhoukv-stdafx.$(OBJEXT)
dezhoukv_OBJECTS = $(am_dezhoukv_OBJECTS)
dezhoukv_DEPENDENCIES = libdezhoukv2.la libmurmurhash3.la \
	libbloomfilter.la libmaglev.la libredisio.la
am_dezhoukvtest_OBJECTS = dezhoukvtest.$(OBJEXT)
dezhoukvtest_OBJECTS = $(am_dezhoukvtest_OBJECTS)
dezhoukvtest_DEPENDENCIES = libdezhoukv2.la
am_dezhoukvtest2_OBJECTS = dezhoukvtest.$(OBJEXT)
dezhoukvtest2_OBJECTS = $(am_dezhoukvtest2_OBJECTS)
dezhoukvtest2_DEPENDENCIES = libdezhoukv3.a
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/_aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libdezhoukv3_a_SOURCES) $(libbloomfilter_la_SOURCES) \
	$(libdezhoukv2_la_SOURCES) $(libhyperloglog_la_SOURCES) \
	$(libmaglev_la_SOURCES) $(libmurmurhash3_la_SOURCES) \
	$(libredisio_la_SOURCES) $(dezhoukv_SOURCES) \
	$(dezhoukvtest_SOURCES) $(dezhoukvtest2_SOURCES)
DIST_SOURCES = $(libdezhoukv3_a_SOURCES) $(libbloomfilter_la_SOURCES) \
	$(libdezhoukv2_la_SOURCES) $(libhyperloglog_la_SOURCES) \
	$(libmaglev_la_SOURCES) $(libmurmurhash3_la_SOURCES) \
	$(libredisio_la_SOURCES) $(dezhoukv_SOURCES) \
	$(dezhoukvtest_SOURCES) $(dezhoukvtest2_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run aclocal-1.11
ALLOCA = 
AMTAR = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run autoconf
AUTOHEADER = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run autoheader
AUTOMAKE = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run automake-1.11
AWK = gawk
BUILD_DEPENDENCIES = /search/odin/daemon/dezhoukv-cpp
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pthread $(if $(DEBUG), -g -O0) $(if $(OPTIMIZE), -O3) $(if \
	$(PROFILE), -pg)
CPP = gcc -std=gnu99 -E
CPPFLAGS =  -D_REENTRANT -D_FILE_OFFSET_BITS=64 $(if $(OPTIMIZE), -DNDEBUG)
CXX = g++ -std=gnu++0x
CXXCPP = g++ -std=gnu++0x -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -pthread $(if $(DEBUG), -g -O0) $(if $(OPTIMIZE), -O3) \
	$(if $(PROFILE), -pg)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =  -lnsl
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = Dezhoukv
PACKAGE_BUGREPORT = shendezhou@sogou-inc.com
PACKAGE_DEPENDENCIES = 
PACKAGE_NAME = DezhouKV
PACKAGE_STRING = DezhouKV 0.10.0
PACKAGE_TARNAME = Dezhoukv
PACKAGE_VERSION = 0.10.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
RAW2OBJFLAGS = -B i386 -I binary -O elf64-x86-64 --rename-section .data=.rodata,alloc,load,readonly,data,contents
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.10.0
abs_builddir = /search/odin/daemon/dezhoukv-cpp/dezhoukv
abs_srcdir = /search/odin/daemon/dezhoukv-cpp/dezhoukv
abs_top_builddir = /search/odin/daemon/dezhoukv-cpp
abs_top_srcdir = /search/odin/daemon/dezhoukv-cpp
ac_ct_CC = gcc -std=gnu99
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /search/odin/daemon/dezhoukv-cpp/_aux/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/demo
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
MOSTLYCLEANFILES = $(foreach t, $(collectLTLIBRARIES), \
	$(collectlib_DIR)/$(t) $(collectlib_DIR)/$(t:%.la=%.so*) \
	$(collectlib_DIR)/$(t:%.la=%.a) \
	$(collectlib_DIR)/.libs/$(t:%.la=%.so*) \
	$(collectlib_DIR)/.libs/$(t:%.la=%.a)) $(foreach t, \
	$(collectLIBRARIES), $(collectlib_DIR)/$(t)) $(foreach t, \
	$(collectPROGRAMS), $(collectbin_DIR)/$(t)) \
	$(collectHEADERS_T)
BUILT_SOURCES = 
AM_CPPFLAGS = -D'SVNVERSION="$(SVNVERSION)"'
AM_LDFLAGS = -Wl,-no-undefined
AM_CFLAGS = -Werror-implicit-function-declaration
AM_CXXFLAGS = 
AM_MAKEFLAGS = 
DOLOCALE = LC_ALL= LC_CTYPE=zh_CN.gbk LC_MESSAGES=en_US
SVNVERSION := $(strip $(subst exported, 0, $(shell \
	if [ -d $(top_srcdir)/.svn ]; then \
		if $(DOLOCALE) svnversion -nc $(top_srcdir) | fgrep 'M' &> /dev/null; then \
			$(DOLOCALE) svnversion -n $(top_srcdir) | sed 's/^.*://' | tr -cd '[0-9]'; \
		else \
			$(DOLOCALE) svnversion -nc $(top_srcdir)| sed 's/^.*://' | tr -cd '[0-9]'; \
		fi; \
	else \
		cat $(top_srcdir)/SVNVERSION | sed 's/^.*://' | tr -cd '[0-9]'; \
	fi \
	) ) )

CONFIGURE_DEPENDENCIES = $(subst @@@,,$(subst \
	CONFIGURE_DEPENDENCIES,@,@CONFIGURE_DEPENDENCIES@)) \
	$(top_srcdir)/acsite.m4
distdir = $(PACKAGE)-$(VERSION).$(SVNVERSION)
EXTRA_DIST = 
collectlib_DIR = $(top_builddir)/_lib
collectbin_DIR = $(top_builddir)/_bin
collectinclude_DIR = $(top_builddir)/_include
collectLIBRARIES = $(lib_LIBRARIES) $(pkglib_LIBRARIES)
collectLTLIBRARIES = $(lib_LTLIBRARIES) $(pkglib_LTLIBRARIES)
collectPROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAM) $(pkglib_PROGRAMS) $(libexec_PROGRAMS) \
	$(bin_SCRIPTS) $(sbin_SCRIPTS) $(libexec_SCRIPTS)

collectHEADERS = $(include_HEADERS) $(pkginclude_HEADERS) $(nobase_include_HEADERS) $(nobase_pkginclude_HEADERS)
collectHEADERS_T = \
	$(addprefix $(collectinclude_DIR)/, $(notdir $(include_HEADERS))) \
	$(addprefix $(collectinclude_DIR)/$(PACKAGE)/, $(notdir $(pkginclude_HEADERS))) \
	$(addprefix $(collectinclude_DIR)/, $(nobase_include_HEADERS)) \
	$(addprefix $(collectinclude_DIR)/$(PACKAGE)/, $(nobase_pkginclude_HEADERS))

dezhoukv_SOURCES = dezhoukv.cpp stdafx.cpp stdafx.h 
dezhoukv_LDADD = libdezhoukv2.la libmurmurhash3.la libbloomfilter.la libmaglev.la libredisio.la
#dezhoukv_LDADD=libdezhoukv2.la @db4_LDADD@

# Custom flags
#dezhoukv_LDADD=-lz
dezhoukv_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)/dezhoukv/bloomfilters/ -I$(top_srcdir)/dezhoukv/maglev/ 
#dezhoukv_LDFLAGS=$(AM_LDFLAGS)
#dezhoukv_CFLAGS=$(AM_CFLAGS) -O3 
#dezhoukv_CXXFLAGS=$(AM_CXXFLAGS) -g

#for dynamic libarary
lib_LTLIBRARIES = libdezhoukv2.la libmurmurhash3.la libbloomfilter.la libmaglev.la libhyperloglog.la libredisio.la
libdezhoukv2_la_SOURCES = dezhoukv2.cpp ktest.h 
libdezhoukv2_la_LDFLAGS = -version-number 0:5:$(SVNVERSION) -lhiredis -lboost_system -Ibloomfilters/
libmurmurhash3_la_SOURCES = murmurhash3/MurmurHash3.cpp murmurhash3/MurmurHash3.h
libmurmurhash3_la_LDFLAGS = -version-number 0:5:$(SVNVERSION)
libbloomfilter_la_SOURCES = bloomfilters/boost/bloom_filter/basic_bloom_filter.hpp
libbloomfilter_la_LDFLAGS = -version-number 0:5:$(SVNVERSION) 
libmaglev_la_SOURCES = maglev/src/csiphash.c maglev/src/Lanton.c
libmaglev_la_LDFLAGS = -version-number 0:5:$(SVNVERSION) -Imaglev/include/
libhyperloglog_la_SOURCES = hyperloglog/hyperloglog.h
libhyperloglog_la_LDFLAGS = -version-number 0:5:$(SVNVERSION)
libredisio_la_SOURCES = redisio/redis_client.cpp redisio/redis_client.h
libredisio_la_LDFLAGS = -version-number 0:5:$(SVNVERSION) -lhiredis 

#for static libraray
noinst_LIBRARIES = libdezhoukv3.a
libdezhoukv3_a_SOURCES = dezhoukv3.cpp ktest.h
dezhoukvtest_SOURCES = dezhoukvtest.cpp ktest.h
dezhoukvtest_LDADD = libdezhoukv2.la
dezhoukvtest2_SOURCES = dezhoukvtest.cpp
dezhoukvtest2_LDADD = libdezhoukv3.a
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.mk $(top_srcdir)/common-rules.mk $(top_srcdir)/collect.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign dezhoukv/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign dezhoukv/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libdezhoukv3.a: $(libdezhoukv3_a_OBJECTS) $(libdezhoukv3_a_DEPENDENCIES) 
	-rm -f libdezhoukv3.a
	$(libdezhoukv3_a_AR) libdezhoukv3.a $(libdezhoukv3_a_OBJECTS) $(libdezhoukv3_a_LIBADD)
	$(RANLIB) libdezhoukv3.a
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbloomfilter.la: $(libbloomfilter_la_OBJECTS) $(libbloomfilter_la_DEPENDENCIES) 
	$(libbloomfilter_la_LINK) -rpath $(libdir) $(libbloomfilter_la_OBJECTS) $(libbloomfilter_la_LIBADD) $(LIBS)
libdezhoukv2.la: $(libdezhoukv2_la_OBJECTS) $(libdezhoukv2_la_DEPENDENCIES) 
	$(libdezhoukv2_la_LINK) -rpath $(libdir) $(libdezhoukv2_la_OBJECTS) $(libdezhoukv2_la_LIBADD) $(LIBS)
libhyperloglog.la: $(libhyperloglog_la_OBJECTS) $(libhyperloglog_la_DEPENDENCIES) 
	$(libhyperloglog_la_LINK) -rpath $(libdir) $(libhyperloglog_la_OBJECTS) $(libhyperloglog_la_LIBADD) $(LIBS)
libmaglev.la: $(libmaglev_la_OBJECTS) $(libmaglev_la_DEPENDENCIES) 
	$(libmaglev_la_LINK) -rpath $(libdir) $(libmaglev_la_OBJECTS) $(libmaglev_la_LIBADD) $(LIBS)
libmurmurhash3.la: $(libmurmurhash3_la_OBJECTS) $(libmurmurhash3_la_DEPENDENCIES) 
	$(libmurmurhash3_la_LINK) -rpath $(libdir) $(libmurmurhash3_la_OBJECTS) $(libmurmurhash3_la_LIBADD) $(LIBS)
libredisio.la: $(libredisio_la_OBJECTS) $(libredisio_la_DEPENDENCIES) 
	$(libredisio_la_LINK) -rpath $(libdir) $(libredisio_la_OBJECTS) $(libredisio_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
dezhoukv$(EXEEXT): $(dezhoukv_OBJECTS) $(dezhoukv_DEPENDENCIES) 
	@rm -f dezhoukv$(EXEEXT)
	$(CXXLINK) $(dezhoukv_OBJECTS) $(dezhoukv_LDADD) $(LIBS)
dezhoukvtest$(EXEEXT): $(dezhoukvtest_OBJECTS) $(dezhoukvtest_DEPENDENCIES) 
	@rm -f dezhoukvtest$(EXEEXT)
	$(CXXLINK) $(dezhoukvtest_OBJECTS) $(dezhoukvtest_LDADD) $(LIBS)
dezhoukvtest2$(EXEEXT): $(dezhoukvtest2_OBJECTS) $(dezhoukvtest2_DEPENDENCIES) 
	@rm -f dezhoukvtest2$(EXEEXT)
	$(CXXLINK) $(dezhoukvtest2_OBJECTS) $(dezhoukvtest2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Lanton.Plo
include ./$(DEPDIR)/MurmurHash3.Plo
include ./$(DEPDIR)/csiphash.Plo
include ./$(DEPDIR)/dezhoukv-dezhoukv.Po
include ./$(DEPDIR)/dezhoukv-stdafx.Po
include ./$(DEPDIR)/dezhoukv2.Plo
include ./$(DEPDIR)/dezhoukv3.Po
include ./$(DEPDIR)/dezhoukvtest.Po
include ./$(DEPDIR)/redis_client.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

csiphash.lo: maglev/src/csiphash.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csiphash.lo -MD -MP -MF $(DEPDIR)/csiphash.Tpo -c -o csiphash.lo `test -f 'maglev/src/csiphash.c' || echo '$(srcdir)/'`maglev/src/csiphash.c
	$(am__mv) $(DEPDIR)/csiphash.Tpo $(DEPDIR)/csiphash.Plo
#	source='maglev/src/csiphash.c' object='csiphash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csiphash.lo `test -f 'maglev/src/csiphash.c' || echo '$(srcdir)/'`maglev/src/csiphash.c

Lanton.lo: maglev/src/Lanton.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Lanton.lo -MD -MP -MF $(DEPDIR)/Lanton.Tpo -c -o Lanton.lo `test -f 'maglev/src/Lanton.c' || echo '$(srcdir)/'`maglev/src/Lanton.c
	$(am__mv) $(DEPDIR)/Lanton.Tpo $(DEPDIR)/Lanton.Plo
#	source='maglev/src/Lanton.c' object='Lanton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Lanton.lo `test -f 'maglev/src/Lanton.c' || echo '$(srcdir)/'`maglev/src/Lanton.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

MurmurHash3.lo: murmurhash3/MurmurHash3.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MurmurHash3.lo -MD -MP -MF $(DEPDIR)/MurmurHash3.Tpo -c -o MurmurHash3.lo `test -f 'murmurhash3/MurmurHash3.cpp' || echo '$(srcdir)/'`murmurhash3/MurmurHash3.cpp
	$(am__mv) $(DEPDIR)/MurmurHash3.Tpo $(DEPDIR)/MurmurHash3.Plo
#	source='murmurhash3/MurmurHash3.cpp' object='MurmurHash3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MurmurHash3.lo `test -f 'murmurhash3/MurmurHash3.cpp' || echo '$(srcdir)/'`murmurhash3/MurmurHash3.cpp

redis_client.lo: redisio/redis_client.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT redis_client.lo -MD -MP -MF $(DEPDIR)/redis_client.Tpo -c -o redis_client.lo `test -f 'redisio/redis_client.cpp' || echo '$(srcdir)/'`redisio/redis_client.cpp
	$(am__mv) $(DEPDIR)/redis_client.Tpo $(DEPDIR)/redis_client.Plo
#	source='redisio/redis_client.cpp' object='redis_client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o redis_client.lo `test -f 'redisio/redis_client.cpp' || echo '$(srcdir)/'`redisio/redis_client.cpp

dezhoukv-dezhoukv.o: dezhoukv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dezhoukv-dezhoukv.o -MD -MP -MF $(DEPDIR)/dezhoukv-dezhoukv.Tpo -c -o dezhoukv-dezhoukv.o `test -f 'dezhoukv.cpp' || echo '$(srcdir)/'`dezhoukv.cpp
	$(am__mv) $(DEPDIR)/dezhoukv-dezhoukv.Tpo $(DEPDIR)/dezhoukv-dezhoukv.Po
#	source='dezhoukv.cpp' object='dezhoukv-dezhoukv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dezhoukv-dezhoukv.o `test -f 'dezhoukv.cpp' || echo '$(srcdir)/'`dezhoukv.cpp

dezhoukv-dezhoukv.obj: dezhoukv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dezhoukv-dezhoukv.obj -MD -MP -MF $(DEPDIR)/dezhoukv-dezhoukv.Tpo -c -o dezhoukv-dezhoukv.obj `if test -f 'dezhoukv.cpp'; then $(CYGPATH_W) 'dezhoukv.cpp'; else $(CYGPATH_W) '$(srcdir)/dezhoukv.cpp'; fi`
	$(am__mv) $(DEPDIR)/dezhoukv-dezhoukv.Tpo $(DEPDIR)/dezhoukv-dezhoukv.Po
#	source='dezhoukv.cpp' object='dezhoukv-dezhoukv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dezhoukv-dezhoukv.obj `if test -f 'dezhoukv.cpp'; then $(CYGPATH_W) 'dezhoukv.cpp'; else $(CYGPATH_W) '$(srcdir)/dezhoukv.cpp'; fi`

dezhoukv-stdafx.o: stdafx.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dezhoukv-stdafx.o -MD -MP -MF $(DEPDIR)/dezhoukv-stdafx.Tpo -c -o dezhoukv-stdafx.o `test -f 'stdafx.cpp' || echo '$(srcdir)/'`stdafx.cpp
	$(am__mv) $(DEPDIR)/dezhoukv-stdafx.Tpo $(DEPDIR)/dezhoukv-stdafx.Po
#	source='stdafx.cpp' object='dezhoukv-stdafx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dezhoukv-stdafx.o `test -f 'stdafx.cpp' || echo '$(srcdir)/'`stdafx.cpp

dezhoukv-stdafx.obj: stdafx.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dezhoukv-stdafx.obj -MD -MP -MF $(DEPDIR)/dezhoukv-stdafx.Tpo -c -o dezhoukv-stdafx.obj `if test -f 'stdafx.cpp'; then $(CYGPATH_W) 'stdafx.cpp'; else $(CYGPATH_W) '$(srcdir)/stdafx.cpp'; fi`
	$(am__mv) $(DEPDIR)/dezhoukv-stdafx.Tpo $(DEPDIR)/dezhoukv-stdafx.Po
#	source='stdafx.cpp' object='dezhoukv-stdafx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dezhoukv_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dezhoukv-stdafx.obj `if test -f 'stdafx.cpp'; then $(CYGPATH_W) 'stdafx.cpp'; else $(CYGPATH_W) '$(srcdir)/stdafx.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-TESTS check-am \
	clean clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLTLIBRARIES


SVNVERSION SVNINFO: dist-svn

dist-svn:
	if [ $(top_srcdir) = $(srcdir) -a -d $(top_srcdir)/.svn ]; then $(MAKE) dist-svn-doit; fi;

dist-svn-doit:
	if $(DOLOCALE) svnversion -nc $(top_srcdir) | fgrep 'M' &> /dev/null; then \
		$(DOLOCALE) svnversion -nc $(top_srcdir) > SVNVERSION; \
		echo -n ':' >> SVNVERSION; \
		$(DOLOCALE) svnversion -n $(top_srcdir) | sed 's/^.*://' | tr -cd '[0-9]' >> SVNVERSION; \
	else \
		$(DOLOCALE) svnversion -nc $(top_srcdir) > SVNVERSION; \
	fi; \
	$(DOLOCALE) svn info -R $(top_srcdir) > SVNINFO;

clean-local:
	if [ -d $(srcdir)/.svn ]; then rm -f SVNVERSION SVNINFO; fi

.PHONY: dist-svn dist-svn-doit

all-local: $(collectLIBRARIES) $(collectLTLIBRARIES) $(collectPROGRAMS) $(collectHEADERS)
	test -z "$(collectbin_DIR)" || $(MAKE) collectbin-local
	test -z "$(collectlib_DIR)" || $(MAKE) collectlib-local
	test -z "$(collectinclude_DIR)" || $(MAKE) collectinclude-local

collectlib-local: $(addprefix $(collectlib_DIR)/, $(collectLIBRARIES) $(collectLTLIBRARIES))
collectbin-local: $(addprefix $(collectbin_DIR)/, $(collectPROGRAMS))
collectinclude-local: $(collectHEADERS_T)

define DoLinkTemplate
#args:(target, source)
$(1): $(2)
	mkdir -p "$$(dir $(1))"
	ln -sf "$$(abspath $(2))" "$(strip $(1))"
endef

$(foreach t, $(include_HEADERS), $(eval $(call DoLinkTemplate, $(collectinclude_DIR)/$(notdir $(t)), $(t))))
$(foreach t, $(pkginclude_HEADERS), $(eval $(call DoLinkTemplate, $(collectinclude_DIR)/$(PACKAGE)/$(notdir $(t)), $(t))))
$(foreach t, $(nobase_include_HEADERS), $(eval $(call DoLinkTemplate, $(collectinclude_DIR)/$(t), $(t))))
$(foreach t, $(nobase_pkginclude_HEADERS), $(eval $(call DoLinkTemplate, $(collectinclude_DIR)/$(PACKAGE)/$(t), $(t))))

$(collectlib_DIR)/%.a: %.a
	mkdir -p $(collectlib_DIR)
	ln -sf --target-directory=$(collectlib_DIR)/ $(addprefix $(CURDIR)/, $<)

$(collectlib_DIR)/%.la: %.la
	mkdir -p $(collectlib_DIR)/.libs
	rm -f $(collectlib_DIR)/$(<:%.la=%.so.*) $(collectlib_DIR)/$(<:%.la=%.so)
	@rm -f $(collectlib_DIR)/.libs/$(<:%.la=%.so.*) $(collectlib_DIR)/.libs/$(<:%.la=%.so)
#	ln -sf $(CURDIR)/.libs/$(<:%.la=%.a) $(collectlib_DIR)/
#	@ln -sf $(CURDIR)/.libs/$(<:%.la=%.a) $(collectlib_DIR)/.libs/
	ln -sf $(CURDIR)/.libs/$(<:%.la=%.so*) $(collectlib_DIR)/
	@ln -sf $(CURDIR)/.libs/$(<:%.la=%.so*) $(collectlib_DIR)/.libs/
	install $(CURDIR)/$< $(collectlib_DIR)/

$(collectbin_DIR)/%: %
	mkdir -p $(collectbin_DIR)
	ln -sf --target-directory=$(collectbin_DIR)/ $(addprefix $(CURDIR)/,$<)

.PHONY: mkdir-collect

all-am: mkdir-collect

mkdir-collect: $(collectlib_DIR) $(collectbin_DIR) $(collectinclude_DIR)

$(collectlib_DIR) $(collectbin_DIR) $(collectinclude_DIR):
	mkdir -p $@

mostlyclean-local:
	@if [ $(srcdir) == $(top_srcdir) ]; then rm -fr $(collectlib_DIR) $(collectbin_DIR) $(collectinclude_DIR); fi

# include $(top_srcdir)/util-gch-dbg.mk
# 
# # seperated debug info
# bindbg_DATA=dezhoukv.dbg 
# libdbg_DATA=libdezhoukv2.so.dbg
# 
# # precomplied header
# BUILT_SOURCES+=stdafx.h.gch

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
